

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="../assets/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>レストラン</title>
  </head>
  <body>
    <slot />
<script type="module" src="../scripts/main.js"></script>
  </body>
</html>

<style is:global>

    @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

    @font-face {
    font-family: 'Japan-Ramen'; 
    src: url('public/fonts/JAPAN RAMEN.otf') format('opentype');
    font-weight: normal; 
    font-style: normal;  
}

@font-face {
  font-family: "Ninja-Kage";
  src: url("public/fonts/NinjaKageDemo-Regular.otf") format("opentype");
  font-weight: normal;
  font-style: normal;
}
    
    * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
  }

  html {
    font-family: "Poppins", sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }
  body{
    background-color: #03071E;
    overflow-x: hidden;
  }

  	.active{
		color: #d0161d !important;
		position: relative;
		
		&::before{
			content: '';
			width: 110%;
			height: 200%;
			background: #f9f1d6;
			position: absolute;
			top: -25px;
			left: 0;
			z-index: -1;
      
			border-radius: 0 0 5px 5px;
		}
	}

@media (max-width: 480px) {
		html, body {
  width: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}
}
  

 
</style>
  <script is:raw>
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();

      const target = document.querySelector(this.getAttribute('href'));
      if (!target) return;

      // Desplazamiento personalizado
      const start = window.scrollY;
      const end = target.getBoundingClientRect().top + window.scrollY;
      const duration = 1000; // duración en ms (1000 = 1s)
      const startTime = performance.now();

      function smoothScroll(currentTime) {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);

        // Easing (curva suave)
        const ease = 1 - Math.pow(1 - progress, 3);

        window.scrollTo(0, start + (end - start) * ease);

        if (elapsed < duration) requestAnimationFrame(smoothScroll);
      }

      requestAnimationFrame(smoothScroll);
    });
  });
</script>

